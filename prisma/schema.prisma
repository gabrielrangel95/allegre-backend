// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPER_ADMIN
  ORG_ADMIN
  ORG_MEMBER
  ORG_TEACHER
  ORG_PARENT
  ORG_STUDENT
}

enum Gender {
  MALE
  FEMALE
}

enum Ethnicity {
  BRANCO
  NEGRO
  AMARELO
  PARDO
  INDIGENA
}

model Organization {
  id      String    @id @default(uuid())
  name    String
  logoUrl String?
  cnpj    String
  phone   String?
  user    User[]
  student Student[]
  class   Class[]

  @@map("organization")
}

model User {
  id                   String        @id @default(uuid())
  organization         Organization? @relation(fields: [organizationId], references: [id])
  organizationId       String?
  name                 String
  email                String
  password             String
  avatarUrl            String?
  forgotPasswordToken  String?
  forgotPasswordSentAt DateTime?
  role                 UserRole
  userClasses          UserClasses[]

  @@map("user")
}

model Student {
  id              String           @id @default(uuid())
  organization    Organization     @relation(fields: [organizationId], references: [id])
  organizationId  String
  name            String
  rg              String?
  cpf             String?
  nis             String?
  gender          Gender
  ethnicity       Ethnicity
  dateOfBirth     DateTime
  primary_phone   String?
  secondary_phone String?
  studentClasses  StudentClasses[]

  @@map("student")
}

model Class {
  id             String           @id @default(uuid())
  organization   Organization     @relation(fields: [organizationId], references: [id])
  organizationId String
  name           String
  logoUrl        String?
  studentClasses StudentClasses[]
  userClasses    UserClasses[]

  @@map("class")
}

model StudentClasses {
  id        String  @id @default(uuid())
  student   Student @relation(fields: [studentId], references: [id])
  studentId String
  class     Class   @relation(fields: [classId], references: [id])
  classId   String

  @@map("student_classes")
}

model UserClasses {
  id      String @id @default(uuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  class   Class  @relation(fields: [classId], references: [id])
  classId String

  @@map("user_classes")
}
